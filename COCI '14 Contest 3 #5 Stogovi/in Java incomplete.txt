import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Stogovi {
	
	public static Node10 [] a = new Node10[300001];
	public static int n;
	public static ArrayList<String> q = new ArrayList<String>();
	public static final int s= 600002;
	public static int [][] st = new int [s][(int)(Math.log(s)/Math.log(2))+1];
	public static int index = 0; 

	public static void construct (int s) {

		for(int r = 1 ; (int)Math.pow(2, r)-1<s; r++) {

			////System.out.println(r);
			for(int i = 0 ; i < s  - (int)(Math.pow(2, r))+1; i ++){
				//insert operation here (Min, Max, etc.)
				//using min in example
				st[i][r] = Math.min(st[i][r-1], st[i+(int)(Math.pow(2, r-1))][r-1]);

			}
		}
	}

	public static int get (int l , int r) {
		int temp = Integer.min(l, r);
		r = Integer.max(l, r);
		l = temp;
		int tempr = (int)(Math.log(r-l+1)/Math.log(2));
		//insert operation here (Min, Max, etc.)
		//using min in example
		return Math.min(st[l][tempr], st[r-(int)Math.pow(2, tempr)+1][tempr]);
	}
	
	public static void dfs (Node10 nod, int d) {
		int temp = nod.c.size();
		st[index][0] = d;
		nod.dfsnum = index;
		index++;
		
		for(int i = 0 ; i < temp ; i ++) {
			dfs(nod.c.get(i), d+1);
			st[index][0] = d;
			index++;
		}
	}
	public static void main(String[] args) {
		
		BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
		
		try {
			n = Integer.parseInt(in.readLine())
;
			a[0]=new Node10(-1);
			for(int i = 1 ; i <= n ; i ++) {
				String temp = in.readLine();
				String [] t = temp.split(" ");
				if(t[0].equals("a")) {
					a[i] = new Node10(i);
					a[i].p = a[Integer.parseInt(t[1])];
					a[i].p.c.add(a[i]);
				}else if (t[0].equals("b")) {
					a[i]=a[Integer.parseInt(t[1])].p;
					//add query
					q.add(temp);
				}else {
					a[i]=a[Integer.parseInt(t[1])];
					//add query
					q.add(temp);
				}
			}
			dfs(a[0], 0);
			construct(index-1);
			
			int temp = q.size();
			for(int i = 0 ; i < temp ; i ++) {
				String [] t = q.get(i).split(" ");
				if(t[0].equals("b")) {
					System.out.println(a[Integer.parseInt(t[1])].val);
				}else {
					System.out.println(get(a[Integer.parseInt(t[1])].dfsnum, a[Integer.parseInt(t[2])].dfsnum));
				}
			}
			
		}catch(Exception e) {
			
		}
	}
}

class Node10{
	public Node10 p;
	public int val;
	public int dfsnum;
	public ArrayList<Node10> c = new ArrayList<Node10>();
	public Node10(int v) {
		val = v;
	}
}