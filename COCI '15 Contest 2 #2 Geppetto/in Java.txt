import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

public class asdf {
	public static int n;
	public static int m;
	public static int ans = 0;
	public static boolean [][] ok = new boolean [20][20];
	
	private static void go(boolean[] has, int lowest) {
		
		if(lowest>n)
			return;
		//System.out.println(Arrays.toString(has));
		ans++;
		for(int i = lowest ; i < n ; i ++) {
			//add in
			if(!has[i]) {
				//System.out.println("add "+ i);
				boolean [] has2 = has.clone();
				for(int i2 = i+1 ; i2 < n ; i2 ++) {
					if (ok[i][i2]) {
						has2[i2]=true;
					}
				}
				has2[i]=true;
				go(has2,i+1);
				//System.out.println("remove " + i);
			}
		}
		
	}
	public static void main(String[] args) {
		BufferedReader in = new BufferedReader (new InputStreamReader (System.in));
		try {
			String [] t = in.readLine().split(" " );
			n = Integer.parseInt(t[0]);
			m = Integer.parseInt(t[1]);
			for(int i = 0 ; i < m ; i ++) {
				t = in.readLine().split(" ");
				//System.out.println((Integer.min(Integer.parseInt(t[0]), Integer.parseInt(t[1]))-1) + " " + (Integer.max(Integer.parseInt(t[0]), Integer.parseInt(t[1]))-1));
				ok[Integer.min(Integer.parseInt(t[0]), Integer.parseInt(t[1]))-1][Integer.max(Integer.parseInt(t[0]), Integer.parseInt(t[1]))-1] = true;
			}
			for(int i = 0 ; i < n ; i ++) {
				ok[i][i] = true;
			}
			boolean [] has = new boolean[n];
			go(has,0);
			System.out.println(ans);
		}catch(Exception e) { 
			 e.printStackTrace(); 
		}
	}
	
}
