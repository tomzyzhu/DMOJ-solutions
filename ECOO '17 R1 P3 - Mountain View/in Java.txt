import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;

public class Mountain {
	public static void main(String[] args) {
		BufferedReader in = new BufferedReader (new InputStreamReader (System.in));

		try {
			for(int o = 0 ; o < 10 ; o ++) {
				int n = Integer.parseInt(in.readLine());
				String [] t = in.readLine().split(" ");
				int [] a = new int[n];
				int [][] store = new int[n][2];
				for(int i = 0 ; i < n ; i ++) {
					a[i] = Integer.parseInt(t[i]);
					store[i][0] = i;
				}
				for(int i = 0; i < n; i ++) {
					double highest = (double)Integer.MIN_VALUE;
					for(int p = i+1; p<n; p++) {
						if((double)(a[p]-a[i])/(p-i)>highest) {
//							if(p==25||i==25)
//								System.out.println(i + "i " +  p + "p " +  " val " + a[p] + " " + a[0] + " " + (double)(a[p]-a[0])/(p-i) + " past highest " + highest);
//							if(p==38||i==38)
//									System.out.println("PPP" + i + "i " +  p + "p " +  " val " + a[p] + " " + a[0] + " " + (double)(a[p]-a[0])/(p-i) +" past highest " + highest);
							highest = (double)(a[p]-a[i])/(p-i);
							store[i][1]++;
							store[p][1]++;
						}
					}
					//System.out.print(a[i] + " ");
				}
				//System.out.println();
//				int max = 0;
//				int ind = 0;
//				for(int i = 0; i < n; i ++) {
//					if (store[i]>max) {
//						max = store[i];
//						ind = i;
//					}
//				}
//				System.out.println(ind+1);
//				Arrays.sort(store);
//				System.out.println(Arrays.toString(store));
				Arrays.sort(store,new Comparator<int[]>() {

					@Override
					public int compare(int[] o1, int[] o2) {
						if(o2[1]!=o1[1])
							return o2[1]-o1[1];
						return o1[0]-o2[0];
					}
					
				});
				System.out.println(store[0][0] +1);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
}